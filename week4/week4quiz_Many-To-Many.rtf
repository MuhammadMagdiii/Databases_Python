{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Georgia;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red51\green51\blue51;\red38\green38\blue38;
\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl600\sa500\partightenfactor0

\f0\fs48 \cf2 \expnd0\expndtw0\kerning0
Many-to-Many Relationships and Python\
\pard\pardeftab720\sl420\sa80\partightenfactor0

\f1\fs28 \cf2 9\'a0questions\
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 1.\'a0\
\pard\pardeftab720\sl420\partightenfactor0

\fs28 \cf2 How do we model a many-to-many relationship between two database tables?\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 We use a BLOB column in both tables\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul \ulc2 We add a table with two foreign keys\ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 We use the ARRAY column type in both of the tables\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 We add 10 foreign keys to each table with names like artict_id_1, artist_id2, etc.\
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 2.\'a0\
\pard\pardeftab720\sl420\partightenfactor0

\fs28 \cf2 In Python, what is a database "cursor" most like?\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 A Python dictionary\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 A file handle\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul A function\ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 A method within a class  X\
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 3.\'a0\
\pard\pardeftab720\sl420\partightenfactor0

\fs28 \cf2 What method do you call in an SQLIte cursor object in Python to run an SQL command?\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 socket()\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 run()\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 send()\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul execute()\ulnone \
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 4.\'a0\
\pard\pardeftab720\sl420\sa400\partightenfactor0

\fs28 \cf2 In the following SQL,\
\pard\pardeftab720\sl360\partightenfactor0

\f2\fs26 \cf1 \cb3 cur.execute('SELECT count FROM Counts WHERE org = ? ', (org, ))\
\pard\pardeftab720\sl420\partightenfactor0

\f1\fs28 \cf2 \cb1 what is the purpose of the "?"?\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It is a syntax error\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It is a search wildcard\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It allows more than one boolean operation in the WHERE clause\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul It is a placeholder for the contents of the "org" variable\ulnone \
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 5.\'a0\
\pard\pardeftab720\sl420\sa400\partightenfactor0

\fs28 \cf2 In the following Python code sequence (assuming cur is a SQLite cursor object),\
\pard\pardeftab720\sl360\partightenfactor0

\f2\fs26 \cf1 \cb3 cur.execute('SELECT count FROM Counts WHERE org = ? ', (org, ))\
row = cur.fetchone()\
\pard\pardeftab720\sl420\partightenfactor0

\f1\fs28 \cf2 \cb1 what is the value in row if no rows match the WHERE clause?\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 -1\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 An empty list  \ul X\ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 An empty dictionary\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul None\ulnone \
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 6.\'a0\
\pard\pardeftab720\sl420\sa400\partightenfactor0

\fs28 \cf2 What does the LIMIT clause in the following SQL accomplish?\
\pard\pardeftab720\sl360\partightenfactor0

\f2\fs26 \cf1 \cb3 SELECT org, count FROM Counts \
   ORDER BY count DESC LIMIT 10\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf2 \cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul It only retrieves the first 10 rows from the table\ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It only sorts on the first 10 characters of the column\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It reverses the sort order if there are more than 10 rows\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It avoids reading data from any table other than Counts\
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 7.\'a0\
\pard\pardeftab720\sl420\partightenfactor0

\fs28 \cf2 What does the executescript() method in the Python SQLite cursor object do that the normal execute() method does not do?\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It allows embeded Python to be executed\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul It allows multiple SQL statements separated by semicolons\ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It allows database tables to be created\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It allows embedded JavaScript to be executed\
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 8.\'a0\
\pard\pardeftab720\sl420\sa400\partightenfactor0

\fs28 \cf2 What is the purpose of "OR IGNORE" in the following SQL:\
\pard\pardeftab720\sl360\partightenfactor0

\f2\fs26 \cf1 \cb3 INSERT OR IGNORE INTO Course (title) VALUES ( ? )\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf2 \cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul It makes sure that if a particular title is already in the table, there are no duplicate rows inserted\ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It ignores errors in the SQL syntax for the statement\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It updates the created_at value if the title already exists in the table\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 It ignores any foreign key constraint errors\
\pard\pardeftab720\sl420\partightenfactor0

\fs50 \cf2 9.\'a0\
\pard\pardeftab720\sl420\sa400\partightenfactor0

\fs28 \cf2 For the following Python code to work, what must be added to the title column in the CREATE TABLE statement for the Course table:\
\pard\pardeftab720\sl360\partightenfactor0

\f2\fs26 \cf1 \cb3 cur.execute('''INSERT OR IGNORE INTO Course (title)\
    VALUES ( ? )''', ( title, ) )\
cur.execute('SELECT id FROM Course WHERE title = ? ', \
    (title, ))\
course_id = cur.fetchone()[0]\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf2 \cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \ul A UNIQUE constraint\ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 A PRIMARY KEY indication\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 An AUTOINCREMENT indication\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 A NOT NULL constraint\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb5 \outl0\strokewidth0 \strokec4 \
What do we generally avoid in a many-to-many junction table?\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb5 \ul \ulc4 An AUTOINCREMENT primary key column\cb1 \ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb5 \ul \ulc4 A logical key\cb1 \ulnone \
\pard\pardeftab720\sl320\partightenfactor0
\cf4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb5 Two foreign keys\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb5 Data items specific to the many-to-many relationship\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \outl0\strokewidth0 \
}